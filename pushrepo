#!/bin/bash

# === Farben ===
GREEN='\033[0;32m'
CYAN='\033[0;36m'
RED='\033[0;31m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

# === Projektname & Branch ===
PROJECT_NAME=$(basename "$(pwd)")
BRANCH=$(git rev-parse --abbrev-ref HEAD)

echo -e "${CYAN}📁 Projekt: $PROJECT_NAME  |  🌿 Branch: $BRANCH${NC}"

# === Sicherheits-Check ===
SENSITIVE_PATTERNS=(".*\.env" ".*\.env\.local" ".*\.DS_Store" ".*\.key" "secrets/" ".*\.supabase/" ".*\.pem")

echo -e "${CYAN}🔍 Sicherheits-Check auf sensible Dateien...${NC}"

ALL_FILES=$(git status --short | awk '{print $2}')
for pattern in "${SENSITIVE_PATTERNS[@]}"; do
  if echo "$ALL_FILES" | grep -qE "$pattern"; then
    echo -e "${RED}🚫 Sicherheitswarnung: Sensible Datei erkannt: $pattern${NC}"
    echo "Bitte entferne sie mit: git rm --cached <dateiname>"
    exit 1
  fi
done

echo -e "${GREEN}✅ Sicherheits-Check bestanden.${NC}"

# === Lock-Dateien entfernen ===
LOCKS=(".git/index.lock" ".git/ORIG_HEAD.lock" ".git/refs/remotes/origin/$BRANCH.lock")
for lock in "${LOCKS[@]}"; do
  if [ -f "$lock" ]; then
    echo -e "${YELLOW}⚠️  Lock-Datei gefunden: $lock – wird entfernt...${NC}"
    rm -f "$lock"
  fi
done

# === Änderungen automatisch hinzufügen ===
echo -e "${CYAN}📦 Git Add läuft...${NC}"
git add .

# === Nichts zum Committen? ===
if git diff --cached --quiet; then
  echo -e "${YELLOW}ℹ️  Keine Änderungen zum Committen – Vorgang abgebrochen.${NC}"
  exit 0
fi

# === Commit-Nachricht ===
read -r -p "📝 Commit-Nachricht (ENTER = automatisch): " message
if [ -z "$message" ]; then
  message="📦 Update: $(date '+%Y-%m-%d %H:%M') – Automatischer Push"
fi

# === Commit ===
git commit -m "$message" 1>/dev/null
if [ $? -eq 0 ]; then
  echo -e "${GREEN}✅ Commit erfolgreich.${NC}"
else
  echo -e "${RED}❌ Fehler beim Commit.${NC}"
  exit 1
fi

# === Git Pull ===
echo -e "${CYAN}🔄 Aktualisiere lokalen Stand (git pull)...${NC}"
git pull --rebase origin "$BRANCH"
if [ $? -ne 0 ]; then
  echo -e "${RED}❌ Git Pull fehlgeschlagen – Konflikte manuell lösen.${NC}"
  exit 1
fi

# === Push ===
echo -e "${CYAN}📤 Push nach GitHub...${NC}"
git push origin "$BRANCH"
if [ $? -eq 0 ]; then
  echo -e "${GREEN}✅ Push abgeschlossen!${NC}"
else
  echo -e "${RED}❌ Push fehlgeschlagen. Prüfe git-Status & Rechte.${NC}"
fi
# === Ende des Skripts ===