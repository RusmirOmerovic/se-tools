#!/bin/bash
# newproject.sh ‚Äì Neues Projekt aus Template erstellen + GitHub-Repo anlegen
# Sicherheit: GitHub Token wird im macOS Keychain gespeichert, nicht im Klartext

set -e

# Farben f√ºr Ausgaben
GREEN='\033[0;32m'
CYAN='\033[0;36m'
RED='\033[0;31m'
NC='\033[0m'

# Konfiguration
TEMPLATE_REPO="https://github.com/RusmirOmerovic/html-template-se.git"
USERNAME="RusmirOmerovic"
GITHUB_API="https://api.github.com"
KEYCHAIN_SERVICE="se-tools-gh-token"   # eindeutiger Name f√ºr den Keychain-Eintrag

# -----------------------------------------------------------
# Funktion: Token aus Keychain laden oder neuen speichern
# -----------------------------------------------------------
get_github_token() {
    # Pr√ºfen ob ein Token in der Keychain existiert
    if security find-generic-password -s "$KEYCHAIN_SERVICE" >/dev/null 2>&1; then
        # Falls vorhanden ‚Üí auslesen (-w = nur Passwort/Token ausgeben)
        GITHUB_TOKEN=$(security find-generic-password -s "$KEYCHAIN_SERVICE" -w)
    else
        # Falls kein Token vorhanden ‚Üí Benutzer nach neuem Token fragen
        read -s -p "üîë Neues GitHub-Token: " GITHUB_TOKEN
        echo
        # Im Keychain speichern (-U = falls schon existiert, √ºberschreiben)
        security add-generic-password -a "$USER" -s "$KEYCHAIN_SERVICE" -w "$GITHUB_TOKEN" -U
        echo -e "${CYAN}üíæ Token wurde sicher im macOS Keychain gespeichert.${NC}"
    fi
}

# -----------------------------------------------------------
# Projektnamen pr√ºfen
# -----------------------------------------------------------
if [ -z "$1" ]; then
    echo -e "${RED}‚ùå Projektnamen angeben!${NC}"
    exit 1
fi

PROJECT_NAME=$1
ZIELORDNER="$PWD/$PROJECT_NAME"

if [ -d "$ZIELORDNER" ]; then
    echo -e "${RED}‚ùå Ordner '$ZIELORDNER' existiert bereits.${NC}"
    exit 1
fi

# Token sicher laden
get_github_token

# -----------------------------------------------------------
# Projekt erstellen
# -----------------------------------------------------------

# Template klonen
git clone "$TEMPLATE_REPO" "$ZIELORDNER"
cd "$ZIELORDNER"

# Git-Init neu starten
rm -rf .git && git init

# .gitignore anlegen
echo -e ".env\n.DS_Store\nnode_modules" > .gitignore

# Erster Commit
git add . && git commit -m "üÜï Neues Projekt: $PROJECT_NAME"

# GitHub Repo erstellen via API
RESPONSE=$(curl -s -o /dev/null -w "%{http_code}" \
    -H "Authorization: token $GITHUB_TOKEN" \
    -H "Content-Type: application/json" \
    -d "{\"name\":\"$PROJECT_NAME\", \"private\":false}" \
    "$GITHUB_API/user/repos")

if [ "$RESPONSE" != "201" ]; then
    echo -e "${RED}‚ùå Fehler bei GitHub Repo-Erstellung.${NC}"
    exit 1
fi

# Remote hinzuf√ºgen & Push
git remote add origin "https://github.com/$USERNAME/$PROJECT_NAME.git"
git branch -M main
git push -u origin main

echo -e "${GREEN}‚úÖ Projekt '$PROJECT_NAME' erstellt & auf GitHub gepusht.${NC}"
