#!/bin/bash
# pushrepo.sh ‚Äì Sicheres Commit + Push mit Schutz vor sensiblen Dateien

set -e

# Farben
GREEN='\033[0;32m'
CYAN='\033[0;36m'
RED='\033[0;31m'
YELLOW='\033[1;33m'
NC='\033[0m'

PROJECT_NAME=$(basename "$(pwd)")
BRANCH=$(git rev-parse --abbrev-ref HEAD)
echo -e "${CYAN}üìÅ Projekt: $PROJECT_NAME  |  üåø Branch: $BRANCH${NC}"

# === Sicherheits-Check ===
SENSITIVE_PATTERNS=(".*\.env" ".*\.env\.local" ".*\.DS_Store" ".*\.key" "secrets/" ".*\.supabase/" ".*\.pem")
echo -e "${CYAN}üîç Sicherheits-Check...${NC}"
ALL_FILES=$(git status --short | awk '{print $2}')
for pattern in "${SENSITIVE_PATTERNS[@]}"; do
  if echo "$ALL_FILES" | grep -qE "$pattern"; then
    echo -e "${RED}üö´ Sicherheitswarnung: $pattern gefunden!${NC}"
    exit 1
  fi
done
echo -e "${GREEN}‚úÖ Sicherheits-Check bestanden.${NC}"

# === √Ñnderungen hinzuf√ºgen ===
git add .
if git diff --cached --quiet; then
  echo -e "${YELLOW}‚ÑπÔ∏è  Keine √Ñnderungen ‚Äì Abbruch.${NC}"
  exit 0
fi

read -r -p "üìù Commit-Nachricht (leer = automatisch): " message
[ -z "$message" ] && message="üì¶ Update: $(date '+%Y-%m-%d %H:%M')"
git commit -m "$message"

# === Remote-Branch pr√ºfen ===
if ! git ls-remote --exit-code origin "$BRANCH" &>/dev/null; then
  echo -e "${YELLOW}‚ÑπÔ∏è  Remote-Branch '$BRANCH' existiert noch nicht ‚Äì wird erstellt.${NC}"
  git push -u origin "$BRANCH"
  exit 0
fi

# === Pull + Push ===
git pull --rebase origin "$BRANCH"
git push origin "$BRANCH"
echo -e "${GREEN}‚úÖ Push abgeschlossen!${NC}"
